const { Markup, Scenes } = require('telegraf');
const { getSheetData } = require('../utils/googleSheets');
const { sendToManager } = require('../utils/sendToManager');

const faqScene = new Scenes.BaseScene('faq');

faqScene.enter(async (ctx) => {
  const questions = await getSheetData('–í–æ–ø—Ä–æ—Å—ã');
  ctx.scene.state.questions = questions;

  ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å:', Markup.inlineKeyboard(
    questions.map(q => [Markup.button.callback(q['–í–æ–ø—Ä–æ—Å'], `question_${q['–í–æ–ø—Ä–æ—Å']}`)])
  ));
});

faqScene.action(/question_(.+)/, async (ctx) => {
  const questionText = ctx.match[1];
  const question = ctx.scene.state.questions.find(q => q['–í–æ–ø—Ä–æ—Å'] === questionText);

  if (question) {
    await ctx.reply(question['–û—Ç–≤–µ—Ç']);

    if (question['–¢—Ä–µ–±—É–µ—Ç –ø–æ–º–æ—â–∏'] && question['–¢—Ä–µ–±—É–µ—Ç –ø–æ–º–æ—â–∏'].toLowerCase() === '–¥–∞') {
      ctx.reply('–ü–æ—Ö–æ–∂–µ, –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å. –•–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —Å –≤–∞–º–∏ —Å–≤—è–∑–∞–ª—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä?', Markup.inlineKeyboard([
        [Markup.button.callback('–î–∞', 'contact_manager_faq')],
        [Markup.button.callback('–ù–µ—Ç', 'cancel_faq')],
      ]));
    } else {
      ctx.scene.leave();
    }
  }
});

faqScene.action('contact_manager_faq', (ctx) => {
  return ctx.scene.enter('faq_contact');
});

faqScene.action('cancel_faq', (ctx) => {
  ctx.reply('–•–æ—Ä–æ—à–æ!');
  return ctx.scene.leave();
});

const faqContactScene = new Scenes.WizardScene(
  'faq_contact',
  (ctx) => {
    ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:');
    return ctx.wizard.next();
  },
  (ctx) => {
    ctx.wizard.state.name = ctx.message.text;
    ctx.reply('–¢–µ–ø–µ—Ä—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:');
    return ctx.wizard.next();
  },
  (ctx) => {
    ctx.wizard.state.phone = ctx.message.text;
    ctx.wizard.state.telegram = ctx.from.username;

    const { name, phone, telegram } = ctx.wizard.state;
    const message = `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –∏–∑ FAQ!\n\n–ò–º—è: ${name}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\nTelegram: @${telegram}`;

    sendToManager(ctx, message);

    ctx.reply('–ó–∞—è–≤–∫–∞ –ø–µ—Ä–µ–¥–∞–Ω–∞! –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è üí¨');
    return ctx.scene.leave();
  }
);


module.exports = { faqScene, faqContactScene };
